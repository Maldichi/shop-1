module.exports = exports = makeVerification;

var orig = require('./swagger.json');
var real = require('./real.json');
var extraFields=[], optionalFields = [], errorFields = [];
function getTypeName(argu,istModell) {
    var res = typeof argu;
    if (Array.isArray(argu)) return 'array';
    if (argu === null) return 'null';
    if (res==='object' && istModell) {
        anyChild = false;
        for(var key in argu){
             anyChild = true;
             break;
        }
        if (!anyChild) res='any';
    }
    if (res==='string' && Date.parse(argu)>0 && argu.length>6) return 'date';
    return res;
}
function makeVerification(dasModell,dieProbe,eltern) {
     var modelType = getTypeName(dasModell,true);
     var probeType = getTypeName(dieProbe);
     if (modelType!=probeType) {
        if (modelType==='any') return;
	if (probeType==='null' || probeType==='undefined') {
            optionalFields.push(eltern+' optional supposed '+modelType);
            return;
        }                                                           
        errorFields.push(eltern + ' expected '+modelType+' but found '+ probeType);
        return;
     }
     if (modelType==='array' && dasModell.length) {
          var a = dasModell[0],i;
          for(i=0;i<dieProbe.length;i++) {
              makeVerification(a,dieProbe[i],eltern+'['+i+']');  
          }
     }
     if (modelType==='object') {
          for(var key in dasModell) {
             makeVerification(dasModell[key],dieProbe[key],eltern+'.'+key);
          }
          for(var key in dieProbe) {
             if (typeof dasModell[key]==='undefined') {
                 extraFields.push(eltern+'.'+key+' of '+probeType);
             }
          }
     }
}     
makeVerification(orig,real,'root');
var any = false;
if (optionalFields.length!=0) {
    console.log('OPTIONAL FIELDS MUST BE: %d ',optionalFields.length);
    for(var i=0;i<optionalFields.length;i++) {
       console.log('   %d) %s',i+1,optionalFields[i]);
    }
   any = true;
}
if (extraFields.length!=0) {
    console.log('EXTRA FIELDS ARE: %d ',extraFields.length);
    for(var i=0;i<extraFields.length;i++) {
       console.log('   %d) %s',i+1,extraFields[i]);
    }
   any = true;
}
if (errorFields.length!=0) {
    console.log('!!!ERROR FIELDS ARE: %d ',errorFields.length);
    for(var i=0;i<errorFields.length;i++) {
       console.log('   %d) %s',i+1,errorFields[i]);
    }
   any = true;
}
if (!any) console.log("Full match!");     
